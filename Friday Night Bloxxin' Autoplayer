
if not game:IsLoaded() then game.Loaded:Wait() end 

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local InputManager = game:GetService("VirtualInputManager")
local InputService = game:GetService("UserInputService")

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/wally-rblx/uwuware-ui/main/main.lua"))()

local Client = game:GetService("Players").LocalPlayer
local PlayerGui = Client:WaitForChild("PlayerGui")

local InputFolder = Client:WaitForChild("Input")
local Keybinds = InputFolder:WaitForChild("Keybinds")

local Settings = {Marked = {}}
local ArrowsTable = {["4"] = {"Up", "Down", "Left", "Right"}}

local function ConfigureSettings(Menu)
    table.clear(Settings.Marked)
    repeat task.wait(0.1) until Menu.Config.TimePast.Value > 0

    Settings.SideMenu = Menu.Game:FindFirstChild(Menu:WaitForChild("PlayerSide").Value)
    Settings.Arrows =  ArrowsTable[tostring(#Settings.SideMenu.Arrows:WaitForChild("IncomingArrows"):GetChildren())] or Settings.SideMenu.Arrows:WaitForChild("IncomingArrows"):GetChildren()
end

RunService.Heartbeat:Connect(function()
    if not Library.flags.AutoPlayer then return end
    if not Menu then return end
    if Menu.Config.TimePast.Value <= 0 then return end
    if not Settings.Arrows then return end

    for _, Arrow in ipairs(Settings.Arrows) do
        Arrow = tostring(Arrow)
        
        local ArrowsContainer = Settings.SideMenu.Arrows:WaitForChild("IncomingArrows"):FindFirstChild(Arrow)
        if not ArrowsContainer then continue end

        for _, Object in ipairs(ArrowsContainer:GetChildren()) do
            local Keybind = Keybinds:FindFirstChild(Arrow) and Keybinds[Arrow].Value or Arrow

            local Start = Settings.SideMenu.Arrows[Arrow].AbsolutePosition.Y
            local Current = Object.AbsolutePosition.Y
            local Difference = not InputFolder.Downscroll.Value and (Current - Start) or (Start - Current) --so that upscroll and downscroll work

            if Difference <= 0.25 and not Settings.Marked[Object] then
                Settings.Marked[Object] = true

                InputManager:SendKeyEvent(true, Keybind, false, nil)
                repeat task.wait() until not Object or not Object:FindFirstChild("Frame") or Object.Frame.Bar.Size.Y.Scale <= 0
                InputManager:SendKeyEvent(false, Keybind, false, nil)
            end
        end 
    end
end)

PlayerGui.ChildAdded:Connect(function(Object)
    if Object:IsA("ScreenGui") and Object:FindFirstChild("Game") then
        getgenv().Menu = Object
        ConfigureSettings(Menu)
    end 
end)

for _, ScreenGui in ipairs(PlayerGui:GetChildren()) do
    if not ScreenGui:FindFirstChild("Game") then continue end
    getgenv().Menu = Object
    ConfigureSettings(Menu)
end

do
    local Window = Library:CreateWindow("Friday Night Bloxxin'") do
        local Folder = Window:AddFolder("Autoplayer") do
            local Toggle = Folder:AddToggle({text = "AutoPlayer", flag = "AutoPlayer" })
        end
        Window:AddBind({text = "Menu toggle", key = Enum.KeyCode.Delete, callback = function() Library:Close() end })

        Window:AddLabel({ text = "UPDATE: Bug fixes" })
        Window:AddLabel({ text = "Supports 6k,7k etc" })
        Window:AddLabel({ text = "Fixed upscroll" })

        Window:AddButton({text = "Instant Solo", callback = function()
            pcall(function()
                PlayerGui.SingleplayerUI.ButtonPressed:FireServer()
            end)
        end})
    end
    Library:Init()
end

warn("Loaded script!")
